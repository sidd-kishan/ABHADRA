;auto push is enabled
;bit reverse added

.program Abhadra_Interpreter

; Repeatedly get one word of data from the TX FIFO, stalling when the FIFO is
; empty. Write the least significant bit to the OUT pin group.
instruction_at_pc_zero_which_is_closing_sq_bracket:
jmp !x, goto_wrap
jmp go_to_respective_part_of_the_loop
instruction_at_pc_two_which_is_starting_sq_bracket:
jmp !x, go_to_respective_part_of_the_loop
jmp goto_wrap
instruction_at_pc_four_which_substract_one_from_data_which_is_x:
jmp x--,goto_wrap
jmp goto_wrap
instruction_at_pc_five_which_bit_flips_data_which_is_x_if_previous_instruction_falls_thrrough_wrap_arround_or_overflow_handelling_is_observed:
mov x,~x
jmp goto_wrap
instruction_at_pc_seven_which_substract_one_from_tape_address_which_is_y:
jmp y--,goto_wrap
jmp goto_wrap
instruction_at_pc_eight_which_bit_flips_tape_address_which_is_y_if_previous_instruction_falls_thrrough_wrap_arround_or_overflow_handelling_is_observed:
mov y,~y
jmp goto_wrap
send_from_y:
mov osr,y
jmp send_from_osr_to_mem
bring_into_x:
set x,31
bring_in:
in pins,1
jmp x--,bring_in
jmp goto_wrap
send_brought_in_to_x:
mov x,isr
jmp goto_wrap
send_brought_in_to_y:
mov y,isr
jmp goto_wrap
go_to_respective_part_of_the_loop:
in osr,27
jmp goto_wrap
go_to_exec_loop:
pull
out exec, 16
jmp go_to_exec_loop
send_from_x:
mov osr,x
send_from_osr_to_mem:
out pins,1
jmp ~osre,send_from_osr_to_mem
goto_wrap:
.wrap_target
pull
out pc,5
.wrap



% c-sdk {
static inline void hello_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = hello_program_get_default_config(offset);

    // Map the state machine's OUT pin group to one pin, namely the `pin`
    // parameter to this function.
    sm_config_set_out_pins(&c, pin, 1);
    // Set this pin's GPIO function (connect PIO to the pad)
    pio_gpio_init(pio, pin);
    // Set the pin direction to output at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    // Load our configuration, and jump to the start of the program
    pio_sm_init(pio, sm, offset, &c);
    // Set the state machine running
    pio_sm_set_enabled(pio, sm, true);
}
%}
